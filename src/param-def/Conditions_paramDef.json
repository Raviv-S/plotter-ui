{
  "current_parameters": {
    "columnSelectInputFieldList": [
      "Age",
      "BP"
    ],
    "oneofcolumnsList": [],
    "someofcolumnsList": [],
    "numberfieldCheckpointInterval": -1,
    "numberfieldImpurity": "entropy",
    "numberfieldMaxBins": 24,
    "numberfieldMaxDepth": 7,
    "numberfieldMinInfoGain": 0,
    "numberfieldMinInstancesPerNode": 2,
    "numberfieldSeed": 12345,
    "checkboxTypes": [],
    "oneofselectAnimals": [],
    "oneofselectPets": "turtle",
    "someofselectNumbers": [],
    "checkboxSingle": "",
    "checkboxEnable": "",
    "radiosetColor": "blue",
    "apples": 100,
    "lemons": 100,
    "berries": 50,
    "passwordField": "",
    "textfieldName": "",
    "textareaDescription": "",
    "expressionBox": "",
    "columnSelectSharedWithInput": [
      "Sex"
    ],
    "structuretableSortOrder": [
      ["Cholesterol","Ascending"]
    ],
    "structuretableRenameFields": [
      ["Age", "Age"],
      ["BP", "BP-1"]
    ],
    "structurelisteditorTableInput": [
      ["Age","Integer"]
    ]
  },
  "parameters": [
    {
      "id": "columnSelectInputFieldList",
      "type": "array[string]",
      "default": [],
      "role": "column"
    },
    {
      "id": "oneofcolumnsList",
      "type": "string",
      "default": "",
      "role": "column"
    },
    {
      "id": "someofcolumnsList",
      "type": "array[string]",
      "default": "",
      "role": "column"
    },
    {
      "id": "numberfieldCheckpointInterval",
      "type": "integer",
      "default": -1
    },
    {
      "id": "numberfieldImpurity",
      "enum": [
        "gini",
        "entropy"
      ],
      "default": "gini"
    },
    {
      "id": "numberfieldMaxBins",
      "type": "integer",
      "default": 32
    },
    {
      "id": "numberfieldMaxDepth",
      "type": "integer",
      "default": 5
    },
    {
      "id": "numberfieldMinInfoGain",
      "type": "double",
      "default": 0
    },
    {
      "id": "numberfieldMinInstancesPerNode",
      "type": "integer",
      "default": 1
    },
    {
      "id": "numberfieldSeed",
      "type": "integer",
      "default": 12345
    },
    {
      "id": "checkboxTypes",
      "type": "array[string]",
      "enum": [
        "integer",
        "string",
        "boolean"
      ],
      "default": ""
    },
    {
      "id": "oneofselectAnimals",
      "enum": [
        "lion",
        "bear",
        "wolf",
        "horse",
        "tiger",
        "monkey"
      ],
      "default": "bear"
    },
    {
      "id": "oneofselectPets",
      "enum": [
        "dog",
        "cat",
        "fish",
        "hamster",
        "turtle"
      ],
      "default": "turtle"
    },
    {
      "id": "someofselectNumbers",
      "type": "array[string]",
      "enum": [
        "One",
        "Two",
        "Three",
        "Four",
        "Five",
        "Six",
        "Seven",
        "Eight",
        "Nine",
        "Ten"
      ],
      "default": "Three"
    },
    {
      "id": "checkboxSingle",
      "type": "boolean",
      "enum": [
        "Single Checkbox"
      ],
      "default": ""
    },
    {
      "id": "checkboxEnable",
      "type": "boolean",
      "enum": [
        "Enable"
      ],
      "default": ""
    },
    {
      "id": "radiosetColor",
      "enum": [
        "red",
        "yellow",
        "blue"
      ],
      "default": "red"
    },
    {
      "id": "apples",
      "type": "integer",
      "default": 1000
    },
    {
      "id": "lemons",
      "type": "integer",
      "default": 10
    },
    {
      "id": "berries",
      "type": "double",
      "default": 50
    },
    {
      "id": "passwordField",
      "type": "password",
      "default": "",
      "role": "new_column"
    },
    {
      "id": "textfieldName",
      "type": "string",
      "default": "",
      "role": "new_column"
    },
    {
      "id": "textareaDescription",
      "type": "array[string]",
      "default": "",
      "role": "new_column"
    },
    {
      "id": "expressionBox",
      "type": "string",
      "default": "",
      "role": "expression"
    },
    {
      "id": "columnSelectSharedWithInput",
      "type": "array[string]",
      "default": [],
      "role": "column"
    },
    {
      "id": "structuretableSortOrder",
      "type": "array[structuretableSortOrder]"
    },
    {
      "id": "structuretableRenameFields",
      "type": "array[structuretableRenameFields]",
      "role": "column",
      "default": []
    },
    {
      "id": "structurelisteditorTableInput",
      "type": "array[structurelisteditorTableInput]"
    }
  ],
  "complex_types": [
    {
      "id": "structuretableSortOrder",
      "key_definition": {
        "id": "field",
        "type": "string",
        "role": "column",
        "default": ""
      },
      "parameters": [
        {
          "id": "structuretable_sort_order",
          "enum": [
            "Ascending",
            "Descending"
          ],
          "default": "Ascending"
        }
      ]
    },
    {
      "id": "structuretableRenameFields",
      "key_definition": {
        "id": "field",
        "type": "string",
        "role": "column"
      },
      "parameters": [
        {
          "id": "new_name",
          "type": "string",
          "role": "new_column"
        }
      ]
    },
    {
      "id": "structurelisteditorTableInput",
      "key_definition": {
        "id": "field",
        "type": "string",
        "role": "textfield",
        "default": ""
      },
      "parameters": [
        {
          "id": "Storage",
          "enum": [
            "String",
            "Integer",
            "Real",
            "Time",
            "Date",
            "Timestamp"
          ],
          "default": "String"
        }
      ]
    }
  ],
  "uihints": {
    "id": "Conditions.test",
    "icon": "images/modelbuildspark.svg",
    "editor_size": "medium",
    "label": {
      "default": "Conditions Test"
    },
    "description": {
      "default": "Test condition handling in controls"
    },
    "parameter_info": [
      {
        "parameter_ref": "columnSelectInputFieldList",
        "label": {
          "default": "Column Select Input"
        },
        "description": {
          "default": "Select one or more input columns"
        }
      },
      {
        "parameter_ref": "oneofcolumnsList",
        "label": {
          "default": "One of Columns list"
        },
        "description": {
          "default": "One of Columns list"
        }
      },
      {
        "parameter_ref": "someofcolumnsList",
        "label": {
          "default": "Some of Columns list"
        },
        "description": {
          "default": "Some of Columns list"
        }
      },
      {
        "parameter_ref": "numberfieldCheckpointInterval",
        "label": {
          "default": "Checkpoint Interval"
        },
        "description": {
          "default": "Set checkpoint interval (>= 1) or disable checkpoint (-1). Ex) 10 means that the cache will get checkpointed every 10 iterations"
        }
      },
      {
        "parameter_ref": "numberfieldImpurity",
        "label": {
          "default": "Impurity"
        },
        "description": {
          "default": "Criterion used for information gain calculation (case-insensitive). Supported: \"entropy\" and \"gini\""
        },
        "orientation": "vertical"
      },
      {
        "parameter_ref": "numberfieldMaxBins",
        "label": {
          "default": "Maximum number of bins"
        },
        "description": {
          "default": "Maximum number of bins used for discretizing continuous features and for choosing how to split on features at each node. More bins give higher granularity. Must be >= 2 and >= number of categories in any categorical feature"
        }
      },
      {
        "parameter_ref": "numberfieldMaxDepth",
        "label": {
          "default": "Maximum depth of the tree"
        },
        "description": {
          "default": "Maximum depth of the tree (>= 0). Ex) depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes"
        }
      },
      {
        "parameter_ref": "numberfieldMinInfoGain",
        "label": {
          "default": "Minimum information gain"
        },
        "description": {
          "default": "Minimum information gain for a split to be considered at a tree node"
        }
      },
      {
        "parameter_ref": "numberfieldMinInstancesPerNode",
        "label": {
          "default": "Minimum instances per node"
        },
        "description": {
          "default": "Minimum number of instances each child must have after split. If a split causes the left or right child to have fewer than minInstancesPerNode, the split will be discarded as invalid (>= 1)"
        }
      },
      {
        "parameter_ref": "numberfieldSeed",
        "label": {
          "default": "Seed"
        },
        "description": {
          "default": "Random seed"
        }
      },
      {
        "parameter_ref": "radiosetColor",
        "label": {
          "default": "Color"
        },
        "description": {
          "default": "Pick a color"
        },
        "orientation": "horizontal"
      },
      {
        "parameter_ref": "apples",
        "label": {
          "default": "Apples"
        },
        "description": {
          "default": "Number of Apples"
        }
      },
      {
        "parameter_ref": "lemons",
        "label": {
          "default": "Lemons"
        },
        "description": {
          "default": "Number of Lemons"
        }
      },
      {
        "parameter_ref": "berries",
        "label": {
          "default": "Berries"
        },
        "description": {
          "default": "Number of Berries"
        }
      },
      {
        "parameter_ref": "checkboxSingle",
        "label": {
          "default": "Single Checkbox"
        },
        "description": {
          "default": "Single Checkbox"
        }
      },
      {
        "parameter_ref": "checkboxEnable",
        "label": {
          "default": "Enable"
        },
        "description": {
          "default": "Enable check"
        }
      },
      {
        "parameter_ref": "checkboxType",
        "label": {
          "default": "Data Types"
        },
        "description": {
          "default": "Choose your Data Types"
        }
      },
      {
        "parameter_ref": "someofselectNumbers",
        "label": {
          "default": "Number"
        },
        "description": {
          "default": "Choose your numbers"
        }
      },
      {
        "parameter_ref": "oneofselectAnimals",
        "label": {
          "default": "Animals"
        },
        "description": {
          "default": "Pick an Animal"
        }
      },
      {
        "parameter_ref": "oneofselectPets",
        "label": {
          "default": "Pets"
        },
        "description": {
          "default": "Pick a pet"
        }
      },
      {
        "parameter_ref": "passwordField",
        "label": {
          "default": "Password"
        },
        "description": {
          "default": "Enter your password"
        }
      },
      {
        "parameter_ref": "textfieldName",
        "label": {
          "default": "Name"
        },
        "description": {
          "default": "Enter your name"
        }
      },
      {
        "parameter_ref": "textareaDescription",
        "label": {
          "default": "Description"
        },
        "description": {
          "default": "Enter a description"
        }
      },
      {
        "parameter_ref": "expressionBox",
        "label": {
          "default": "Expression"
        },
        "description": {
          "default": "Expression box"
        }
      },
      {
        "parameter_ref": "columnSelectSharedWithInput",
        "label": {
          "default": "Column Select Shared with Sort",
          "resource_key": "columnSelectSharedWithInput.label"
        },
        "description": {
          "default": "Shared input list with below control"
        }
      },
      {
        "parameter_ref": "structuretableSortOrder",
        "label": {
          "default": "Sort by"
        }
      },
      {
        "parameter_ref": "structuretableRenameFields",
        "label": {
          "default": "Rename Field"
        }
      },
      {
        "parameter_ref": "structurelisteditorTableInput",
        "label": {
          "default": "Table Input"
        }
      }
    ],
    "complex_type_info": [
      {
        "complex_type_ref": "structuretableSortOrder",
        "moveable_rows": true,
        "key_definition": {
          "parameter_ref": "field",
          "width": 28,
          "label": {
            "resource_key": "structuretableSortOrder.field.label"
          }
        },
        "parameters": [
          {
            "parameter_ref": "structuretable_sort_order",
            "width": 16,
            "resource_key": "structuretableSortOrder.sort_order",
            "label": {
              "resource_key": "structuretableSortOrder.sort_order.label"
            },
            "control": "toggletext",
            "value_icons": [
              "/images/up-triangle.svg",
              "/images/down-triangle.svg"
            ]
          }
        ]
      },
      {
        "complex_type_ref": "structuretableRenameFields",
        "key_definition": {
          "parameter_ref": "field",
          "label": {
            "resource_key": "structuretableRenameFields.field.label"
          },
          "columns": 26
        },
        "parameters": [
          {
            "parameter_ref": "new_name",
            "label": {
              "resource_key": "structuretableRenameFields.new_name.label"
            },
            "columns": 26,
            "edit_style": "inline"
          }
        ]
      },
      {
        "complex_type_ref": "structurelisteditorTableInput",
        "key_definition": {
          "parameter_ref": "field",
          "width": 16,
          "label": {
            "resource_key": "structurelisteditorTableInput.field.label"
          }
        },
        "parameters": [
          {
            "parameter_ref": "structurelisteditorTableInput",
            "width": 200,
            "resource_key": "structurelisteditorTableInput.sort_order",
            "label": {
              "resource_key": "structurelisteditorTableInput.sort_order.label"
            },
            "control": "textfield"
          }
        ]
      }
    ],
    "group_info": [
      {
        "id": "Numberfield",
        "label": {
          "default": "Numbers"
        },
        "parameter_refs": [
          "numberfieldCheckpointInterval",
          "numberfieldImpurity",
          "numberfieldMaxBins",
          "numberfieldMaxDepth",
          "numberfieldMinInfoGain",
          "numberfieldMinInstancesPerNode",
          "numberfieldSeed"
        ]
      },
      {
        "id": "Columns",
        "type": "panels",
        "group_info": [
          {
            "id": "columnAllocator",
            "type": "columnSelection",
            "label": {
              "default": "Columns"
            },
            "parameter_refs": [
              "columnSelectSharedWithInput",
              "columnSelectInputFieldList"
            ]
          },
          {
            "id": "List",
            "label": {
              "default": "List"
            },
            "parameter_refs": [
              "oneofcolumnsList",
              "someofcolumnsList"
            ]
          }
        ]
      },
      {
        "id": "Selects",
        "label": {
          "default": "Selects"
        },
        "parameter_refs": [
          "checkboxTypes",
          "oneofselectAnimals",
          "oneofselectPets",
          "someofselectNumbers",
          "checkboxSingle",
          "checkboxEnable",
          "radiosetColor"
        ],
        "group_info": [
          {
            "id": "mode-settings",
            "type": "panelSelector",
            "depends_on_ref": "radiosetColor",
            "group_info": [
              {
                "id": "red",
                "parameter_refs": [
                  "apples"
                ]
              },
              {
                "id": "yellow",
                "parameter_refs": [
                  "lemons"
                ]
              },
              {
                "id": "blue",
                "parameter_refs": [
                  "berries"
                ]
              }
            ]
          }
        ]
      },
      {
        "id": "Textfields",
        "label": {
          "default": "Textfields"
        },
        "parameter_refs": [
          "passwordField",
          "textfieldName",
          "textareaDescription",
          "expressionBox"
        ]
      },
      {
        "id": "Tables",
        "type": "panels",
        "group_info": [
          {
            "id": "structuretableSortOrder",
            "type": "columnSelection",
            "label": {
              "default": "Columns"
            },
            "parameter_refs": [
              "structuretableSortOrder"
            ]
          },
          {
            "id": "structuretableSortOrder",
            "label": {
              "default": "Tables"
            },
            "type": "columnSelection",
            "parameter_refs": [
              "structuretableRenameFields",
              "structurelisteditorTableInput"
            ]
          },
          {
            "id": "List",
            "label": {
              "default": "List"
            },
            "parameter_refs": [
              "structurelisteditorTableInput"
            ]
          }
        ]
      }
    ]
  },
  "conditions": [
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "focus_parameter_ref": "numberfieldCheckpointInterval",
          "message": {
            "resource_key": "numberfield_checkpoint_interval_not_valid"
          }
        },
        "evaluate": {
          "or": [
            {
              "condition": {
                "parameter_ref": "numberfieldCheckpointInterval",
                "op": "equals",
                "value": -1
              }
            },
            {
              "condition": {
                "parameter_ref": "numberfieldCheckpointInterval",
                "op": "greaterThan",
                "value": 0
              }
            }
          ]
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "focus_parameter_ref": "numberfieldMaxBins",
          "message": {
            "resource_key": "numberfield_max_bins_not_valid"
          }
        },
        "evaluate": {
          "or": [
            {
              "condition": {
                "parameter_ref": "numberfieldMaxBins",
                "op": "greaterThan",
                "value": 1
              }
            },
            {
              "condition": {
                "parameter_ref": "numberfieldMaxDepth",
                "op": "greaterThan",
                "value": 0
              }
            }
          ]
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "warning",
          "focus_parameter_ref": "numberfieldMinInstancesPerNode",
          "message": {
            "resource_key": "numberfield_min_instances_per_node_not_valid"
          }
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "numberfieldMinInstancesPerNode",
            "op": "greaterThan",
            "value": 0
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "focus_parameter_ref": "numberfieldMinInfoGain",
          "message": {
            "resource_key": "numberfield_min_info_gain_not_valid"
          }
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "numberfieldMinInfoGain",
            "op": "greaterThan",
            "value": 0
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "focus_parameter_ref": "numberfieldSeed",
          "message": {
            "resource_key": "numberfield_seed_not_valid"
          }
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "numberfieldSeed",
            "op": "contains",
            "value": "123"
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "focus_parameter_ref": "columnSelectInputFieldList",
          "message": {
            "resource_key": "column_select_input_field_list_not_empty"
          }
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "columnSelectInputFieldList",
            "op": "isNotEmpty"
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "focus_parameter_ref": "oneofcolumnsList",
          "message": {
            "resource_key": "one_of_columns_list_not_empty"
          }
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "oneofcolumnsList",
            "op": "contains",
            "value": "Sex"
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "warning",
          "focus_parameter_ref": "someofcolumnsList",
          "message": {
            "resource_key": "some_of_columns_list_not_empty"
          }
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "someofcolumnsList",
            "op": "isNotEmpty"
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "warning",
          "message": {
            "default": "No data types are selected",
            "resource_key": "checkbox_types_not_empty"
          },
          "focus_parameter_ref": "checkboxTypes"
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "checkboxTypes",
            "op": "isNotEmpty"
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "warning",
          "message": {
            "default": "Warning: selected tiger",
            "resource_key": "one_of_select_animals_not_empty"
          },
          "focus_parameter_ref": "oneofselectAnimals"
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "oneofselectAnimals",
            "op": "notContains",
            "value": "tiger"
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "warning",
          "message": {
            "default": "Warning: selected three",
            "resource_key": "some_of_select_animals_not_three"
          },
          "focus_parameter_ref": "someofselectNumbers"
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "someofselectNumbers",
            "op": "notContains",
            "value": "three"
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "message": {
            "default": "Checkbox single should be checked if a Data Type is selected",
            "resource_key": "checkbox_single_not_empty"
          },
          "focus_parameter_ref": "checkboxSingle"
        },
        "evaluate": {
          "or": [
            {
              "and": [
                {
                  "condition": {
                    "parameter_ref": "checkboxTypes",
                    "op": "isNotEmpty"
                  }
                },
                {
                  "condition": {
                    "parameter_ref": "checkboxSingle",
                    "op": "checked"
                  }
                }
              ]
            },
            {
              "and": [
                {
                  "condition": {
                    "parameter_ref": "checkboxTypes",
                    "op": "isEmpty"
                  }
                },
                {
                  "condition": {
                    "parameter_ref": "checkboxSingle",
                    "op": "notChecked"
                  }
                }
              ]
            }
          ]
        }
      }
    },
    {
      "enabled": {
        "parameter_refs": [
          "radiosetColor"
        ],
        "evaluate": {
          "condition": {
            "parameter_ref": "checkboxEnable",
            "op": "checked"
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "warning",
          "message": {
            "default": "Are you sure you want to choose yellow?",
            "resource_key": "radiosetColor"
          },
          "focus_parameter_ref": "radiosetColor"
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "radiosetColor",
            "op": "notEquals",
            "value": "yellow"
          }
        }
      }
    },
    {
      "visible": {
        "parameter_refs": [
          "oneofselectPets"
        ],
        "evaluate": {
          "condition": {
            "parameter_ref": "oneofselectAnimals",
            "op": "notContains",
            "value": "lion"
          }
        }
      }
    },
    {
      "visible": {
        "parameter_refs": [
          "textfieldName",
          "textareaDescription",
          "expressionBox"
        ],
        "evaluate": {
          "condition": {
            "parameter_ref": "passwordField",
            "op": "contains",
            "value": "password"
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "focus_parameter_ref": "passwordField",
          "message": {
            "resource_key": "password_not_empty"
          }
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "passwordField",
            "op": "isNotEmpty"
          }
        }
      }
    },
    {
      "enabled": {
        "parameter_refs": [
          "expressionBox"
        ],
        "evaluate": {
          "condition": {
            "parameter_ref": "textfieldName",
            "op": "isNotEmpty"
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "message": {
            "default": "Name cannot contain /",
            "resource_key": "textfield_name_not_valid_one"
          },
          "focus_parameter_ref": "textfieldName"
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "textfieldName",
            "op": "notContains",
            "value": "/"
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "message": {
            "default": "Name cannot contain double or single \"quotes\"",
            "resource_key": "textfield_name_not_valid_two"
          },
          "focus_parameter_ref": "textfieldName"
        },
        "evaluate": {
          "and": [
            {
              "condition": {
                "parameter_ref": "textfieldName",
                "op": "notContains",
                "value": "\""
              }
            },
            {
              "condition": {
                "parameter_ref": "textfieldName",
                "op": "notContains",
                "value": "'"
              }
            }
          ]
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "warning",
          "message": {
            "default": "Description cannot contain /, double or single \"quotes\"",
            "resource_key": "textarea_description_not_valid"
          },
          "focus_parameter_ref": "textareaDescription"
        },
        "evaluate": {
          "and": [
            {
              "condition": {
                "parameter_ref": "textareaDescription",
                "op": "notContains",
                "value": "/"
              }
            },
            {
              "condition": {
                "parameter_ref": "textareaDescription",
                "op": "notContains",
                "value": "\""
              }
            },
            {
              "condition": {
                "parameter_ref": "textareaDescription",
                "op": "notContains",
                "value": "'"
              }
            }
          ]
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "message": {
            "default": "Expression cannot contain /, double or single \"quotes\"",
            "resource_key": "expression_box_not_valid"
          },
          "focus_parameter_ref": "expressionBox"
        },
        "evaluate": {
          "and": [
            {
              "condition": {
                "parameter_ref": "expressionBox",
                "op": "notContains",
                "value": "/"
              }
            },
            {
              "condition": {
                "parameter_ref": "expressionBox",
                "op": "notContains",
                "value": "\""
              }
            },
            {
              "condition": {
                "parameter_ref": "expressionBox",
                "op": "notContains",
                "value": "'"
              }
            }
          ]
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "focus_parameter_ref": "structuretableRenameFields",
          "message": {
            "resource_key": "structuretable_rename_fields_not_empty"
          }
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "structuretableRenameFields",
            "op": "isNotEmpty"
          }
        }
      }
    }
  ],
  "dataset_metadata": [
    {
      "id": "schema1",
      "fields": [
        {
          "name": "Age",
          "type": "integer",
          "metadata": {
            "description": "",
            "measure": "range",
            "modeling_role": "input"
          }
        },
        {
          "name": "Sex",
          "type": "string",
          "metadata": {
            "description": "",
            "measure": "discrete",
            "modeling_role": "input"
          }
        },
        {
          "name": "BP",
          "type": "string",
          "metadata": {
            "description": "",
            "measure": "discrete",
            "modeling_role": "input"
          }
        },
        {
          "name": "Cholesterol",
          "type": "string",
          "metadata": {
            "description": "",
            "measure": "discrete",
            "modeling_role": "input"
          }
        },
        {
          "name": "Na",
          "type": "double",
          "metadata": {
            "description": "",
            "measure": "range",
            "modeling_role": "input"
          }
        },
        {
          "name": "K",
          "type": "double",
          "metadata": {
            "description": "",
            "measure": "range",
            "modeling_role": "input"
          }
        },
        {
          "name": "Drug",
          "type": "string",
          "metadata": {
            "description": "",
            "measure": "discrete",
            "modeling_role": "input"
          }
        }
      ]
    }
  ],
  "resources": {
    "columnSelectInputFieldList.label": "Column Select Input columns",
    "columnSelectInputFieldList.desc": "Select one or more input columns",
    "oneofcolumnsList.label": "",
    "oneofcolumnsList.desc": "",
    "someofcolumnsList.label": "",
    "someofcolumnsList.desc": "",
    "column_select_input_field_list_not_empty": "Select one or more input fields. This is sample text to show how an error or warning message will display text if provided a long description",
    "one_of_columns_list_not_empty": "Cannot have Sex selected",
    "some_of_columns_list_not_empty": "Field must be selected",
    "numberfieldCheckpointInterval.label": "Checkpoint Interval",
    "numberfieldCheckpointInterval.desc": "Set checkpoint interval (>= 1) or disable checkpoint (-1). Ex) 10 means that the cache will get checkpointed every 10 iterations",
    "numberfieldImpurity.label": "Impurity",
    "numberfieldImpurity.desc": "Criterion used for information gain calculation (case-insensitive). Supported: \"entropy\" and \"gini\"",
    "numberfieldMaxBins.label": "Maximum number of bins",
    "numberfieldMaxBins.desc": "Maximum number of bins used for discretizing continuous features and for choosing how to split on features at each node. More bins give higher granularity. Must be >= 2 and >= number of categories in any categorical feature",
    "numberfieldMaxDepth.label": "Maximum depth of the tree",
    "numberfieldMaxDepth.desc": "Maximum depth of the tree (>= 0). Ex) depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes",
    "numberfieldMinInfoGain.label": "Minimum information gain",
    "numberfieldMinInfoGain.desc": "Minimum information gain for a split to be considered at a tree node",
    "numberfieldMinInstancesPerNode.label": "Minimum instances per node",
    "numberfieldMinInstancesPerNode.desc": "Minimum number of instances each child must have after split. If a split causes the left or right child to have fewer than minInstancesPerNode, the split will be discarded as invalid (>= 1)",
    "numberfieldSeed.label": "Seed",
    "numberfieldSeed.desc": "Random seed",
    "numberfield_checkpoint_interval_not_valid": "The checkpoint interval value must either be >= 1 or -1 to disable",
    "numberfield_max_bins_not_valid": "Maximum number of bins must be >= 2 or Maximum depth of the tree > 0",
    "numberfield_min_instances_per_node_not_valid": "The minimum instances per node value must be >= 1",
    "numberfield_min_info_gain_not_valid": "Cannot be less than 0",
    "numberfield_seed_not_valid": "This is an example of a very long error message that someone might enter. The message text will wrap around to the next line as shown here.",
    "checkboxTypes.label": "Data Types",
    "checkboxTypes.desc": "",
    "someofselectNumbers.label": "",
    "someofselectNumbers.desc": "",
    "oneofselectAnimals.label": "",
    "oneofselectAnimals.desc": "",
    "oneofselectPets.label": "",
    "oneofselectPets.desc": "",
    "checkboxSingle.label": "",
    "checkboxSingle.desc": "",
    "checkboxEnable.label": "",
    "checkboxEnable.desc": "",
    "radiosetColor.label": "",
    "radiosetColor.desc": "",
    "apples.label": "",
    "apples.desc": "",
    "lemons.label": "",
    "lemons.desc": "",
    "berries.label": "",
    "berries.desc": "",
    "checkbox_types_not_empty": "No data types are selected",
    "checkbox_single_not_empty": "Checkbox single should be checked if data type is selected",
    "one_of_select_animals_not_empty": "Warning: selected tiger",
    "some_of_select_animals_not_three": "Warning: selected three",
    "passwordField.label": "",
    "passwordField.desc": "",
    "textfieldName.label": "",
    "textfieldName.desc": "",
    "textareaDescription.label": "",
    "textareaDescription.desc": "",
    "expressionBox.label": "",
    "expressionBox.desc": "",
    "password_not_empty": "Password cannot be empty, enter \"password\"",
    "textarea_description_not_valid": "Description cannot contain /, double or single \"quotes\"",
    "textfield_name_not_valid_one": "Name cannot contain /",
    "textfield_name_not_valid_two": "Name cannot contain double or single \"quotes\"",
    "expression_box_not_valid": "Expression cannot contain /, double or single \"quotes\"",
    "columnSelectSharedWithInput.label": "Input List Shared with Below Control",
    "columnSelectSharedWithInput.desc": "Shared input list with sort by",
    "structuretableSortOrder.label": "Sort",
    "structuretableSortOrder.field.label": "Field",
    "structuretableSortOrder.sort_order.label": "Order",
    "structuretableSortOrder.sort_order.Ascending.label": "Ascending",
    "structuretableSortOrder.sort_order.Descending.label": "Descending",
    "structuretableRenameFields.rename.label": "Rename Columns",
    "structuretableRenameFields.field.label": "Input name",
    "structuretableRenameFields.new_name.label": "Output name",
    "structuretable_rename_fields_not_empty": "The 'Output Name' field cannot be empty",
    "structurelisteditorTableInput.label": "Sort",
    "structurelisteditorTableInput.field.label": "Field",
    "structurelisteditorTableInput.sort_order.label": "Order",
    "structurelisteditorTableInput.sort_order.Ascending.label": "Ascending",
    "structurelisteditorTableInput.sort_order.Descending.label": "Descending"
  }
}
